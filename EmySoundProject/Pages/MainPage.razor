@page "/"
@using EmySoundProject.Components
@inherits MainPageComponent

<PageTitle>MainPage</PageTitle>

<DirectoryDatasetPicker/>

<div style="margin-bottom: 20px" class="row">
    <div class="col-md-12">
        <RadzenLabel Text="Plik badany"/>
    </div>

    <div class="col-md-12 justify-content-between d-flex">
        <RadzenTextBox style="width: 700px" @bind-Value="@FilePath" Placeholder="Ścieżka do pliku z audycją"/>
        <RadzenButton Disabled="@(FilePath.Length == 0)" Text="check" Click="@Button1Click"/>
    </div>

    <div class="col-md-12">
        <RadzenDropDown Data="@ExaminedFilePathList" style="width: 700px" TextProperty="FileName" ValueProperty="Path" TValue="string" Change="@Dropdown1Change"/>
    </div>
</div>

<div style="margin-bottom: 20px" class="row">
    <div class="col-md-12">
        <RadzenLabel Text="Dopasowanie %"/>
    </div>
    <div class="col-md-12 justify-content-between d-flex">
        <RadzenNumeric @bind-Value="@Confidence" Min="0" Max="100"/>
        <RadzenButton Text="match" Click="@Button2Click" disabled="@IsTaskRunning"/>
    </div>
</div>

<div>
    @WaveformDisplayRender
</div>

@if (ResultList.Any())
{
    <RadzenAccordion style="margin-top: 20px; margin-bottom: 20px">
        <Items>
            <RadzenAccordionItem Text="More info">
                <RadzenAccordion>
                    <Items>
                        @foreach (var entry in ResultList)
                        {
                            var accordionItemTitle = $"{entry.Track.Title} {entry.MatchedAt.ToString("HH:mm:ss")}";
                            <RadzenAccordionItem Text="@accordionItemTitle">
                                <b>Title:</b> @entry.Track.Title <br/>
                                <b>Length:</b> @entry.Track.Length <br/>
                                <b>File path:</b> @entry.Track.Id <br/>
                                <b>Coverage:</b>
                                <ul>
                                    <li><b>Confidence</b>: @entry.Coverage.Confidence</li>
                                    <li><b>QueryMatchStartsAt</b>: @entry.Coverage.QueryMatchEndsAt</li>
                                    <li><b>TrackMatchStartsAt</b>: @entry.Coverage.TrackMatchStartsAt</li>
                                    <li><b>TrackMatchEndsAt</b>: @entry.Coverage.TrackMatchEndsAt</li>
                                    <li><b>QueryMatchEndsAt</b>: @entry.Coverage.QueryMatchEndsAt</li>
                                    <li><b>TrackCoverageWithPermittedGapsLength</b>: @entry.Coverage.TrackCoverageWithPermittedGapsLength</li>
                                    <li><b>QueryCoverageWithPermittedGapsLength</b>: @entry.Coverage.QueryCoverageWithPermittedGapsLength</li>
                                    <li><b>TrackDiscreteCoverageLength</b>: @entry.Coverage.TrackDiscreteCoverageLength</li>
                                    <li><b>QueryDiscreteCoverageLength</b>: @entry.Coverage.QueryDiscreteCoverageLength</li>
                                    <li><b>TrackGapsCoverageLength</b>: @entry.Coverage.TrackGapsCoverageLength</li>
                                    <li><b>QueryGapsCoverageLength</b>: @entry.Coverage.QueryGapsCoverageLength</li>
                                    <li><b>TrackStartsAt</b>: @entry.Coverage.TrackStartsAt</li>
                                    <li><b>QueryLength</b>: @entry.Coverage.QueryLength</li>
                                    <li><b>TrackLength</b>: @entry.Coverage.TrackLength</li>
                                </ul>
                            </RadzenAccordionItem>
                        }
                    </Items>
                </RadzenAccordion>
            </RadzenAccordionItem>
        </Items>
    </RadzenAccordion>
}

@if (ResultList.Any())
{
    <div style="display: flex; justify-content: center;">
        <RadzenButton Text="generate" Click="@GenerateButtonClick" disabled="@(IsTaskRunning || IsExctracting)"/>
    </div>
}
@using System.Net
@using EmySoundProject.Models
@inject IJSRuntime JS

<div id="waveform"></div>
<div id="audioControls"></div>
<p>
    <label>
        <input type="checkbox" @bind="_loop" />
        Loop regions
    </label>

    <label style="margin-left: 2em">
        Zoom: <input id="slider" type="range" />
    </label>
</p>

@code
{
    private bool _loop;

    [Parameter]
    public string AudioFilePath { get; set; }

    [Parameter]
    public IEnumerable<WaveformRegionModel> WaveformRegionModels { get; set; }

    [Parameter]
    public double[] AudioPeaks { get; set; }

    // Use JavaScript interop to update the loop variable in JS
    private async Task UpdateLoopStatus()
    {
        await JS.InvokeVoidAsync("setLoopStatus", _loop);
    }

    // Call the JavaScript initialization function when the component is loaded
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var encodedPath = WebUtility.UrlEncode(AudioFilePath);
            var audioUrl = $"/audio/{encodedPath}";
            await JS.InvokeVoidAsync("initializeWaveform", audioUrl, AudioPeaks);

            foreach (var waveformRegionModel in WaveformRegionModels)
            {
                AddRegion(waveformRegionModel);
            }
        }
    }

    private void AddRegion(WaveformRegionModel waveformRegionModel)
    {
        JS.InvokeVoidAsync(
            "addRegionToList",
            waveformRegionModel.Start,
            waveformRegionModel.End,
            waveformRegionModel.RegionName);
    }
}